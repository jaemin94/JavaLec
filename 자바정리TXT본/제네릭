  1. Generic
  	- 사용방법	: class <> 객체명 = new class <>();
  			  class <> 객체명 = new class(); 
  			  오른쪽과 왼쪽의 타입이 같다면 왼쪽에서 <> 제외해도된다.
  			  
  	- 제네릭 : 클래스나 메서드의 코딩시점이 아닌 사용하는 시점으로 타입선언을 미뤄 어떠한 타입이든 다 받을수 있는것
  	- 타입 병수명은 T 로 정해진건 아니다
  	- 사용시 정확한 타입을 명시
  	- 컴파일 시점까지도 어떤 타입일지 알수 없다. 객체 생성시에 타입이 정해진다
  	- Object 를 써도되나 Object는 타입 캐스팅을 해줘야 하며 의도하지 않은 타입이 사용될수 있다.
  	- 변수의 타입으로 지정은가능 하나 new 연사자는 컴파일시점에 어떤타입인지 정해져야한다.
  	- 제한적인 제네릭
  		- 제네릭 생성할때 제안을 두고 싶다면	: <> 안에 상속 받은 클래스의 부모를 상속받으면 된다.
  	
  	- 제네릭 메서드	
  		- 제네릭의 타입은 오버로딩의 대상이 아니다
  		- 리턴 타입 앞에 <> 기호를 추가하고 타입 파라미터를 기술한다
 	- 제네릭은 복수로 사용할수 있다.
 	