  1. 접근 한정자
  	- public	: 모든 클래스에서 접근가능
  	- defalut	: 동일 패키지에 속한 클래스에서만 접근가능
  	- private	: 동일 패키지 or 상속관계의 하위클래스에서만 접근가능
  	- protected	: 현재 클래스에서만 접근가능
 
  2. Getter , Setter(화면에서 우클릭 > Source > generate getter setter 눌러서 만들수있다.)
  	- Getter = 저장된 값을 불러오는 함수 (리턴 타입을 받는 함수 : int get변수명())
  	- Setter = 지정한 값을 입력하는 함수 (public void 로 리턴타입 없음, 단 리턴을 사용가능. 보통 this로 값을 받아 저장)
  
  3. 캡슐화
  	- 특정 목적을 가지는 기능 구현하는데 있어서 각 과정의 일부나 전부가 외부로의 노출이 불필요한 경우는 정보은닉(Private)을
  	  포함하여 각 과정을 세부기능들의 순서를 지정하여 사용가능한 함수로 지어하는데 이를 캡슐화라고 한다.
  
  4. String 메서드 사용
 	- contain	: 문자열 포함여부
 	- split		: 구분자를 기준으로 문자열을 분할 (배열형으로 저장)
 	- join		: 구분자를 기준으로 문자열을 합친다
 	- trim		: 앞뒤 공백 제거
 	- indexof	: 문자열의 인덱스 번호 확인
 	- substring	: 문자열 자르기
 	- equals	: 문자열의 내용이 같은지 확인
 	
  5. Static
  	- 객체간의 공유되는 변수
  	- 객체 생성과는 무관하게 메모리공간에 할당
  	- 객체 생성없이 클래스명으로 사용가능
  	- 공유함수를 만들게 되면 그 안에서 객체가 생성되기전 없는 멤버 변수를 사용 할 수 없다.
  	
  6. 싱글톤 패턴
  	- 생성자를 private 으로 선언
  	- 외부에서 사용할수있는 반환 메서드 선언
  	- 인스턴스 변수 : 유일한 인트스턴스를 저장하기 위한 정적 변수를 클래스 내부에서 선언
  	- 객체를 지정된 개수만큼 공유한다. 	